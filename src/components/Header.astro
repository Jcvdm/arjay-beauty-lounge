---
// Modern Header component for ARJAY Beauty Lounge
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-xl border-b border-white/20 w-full">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-20">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="group flex items-center space-x-3">
          <!-- Main Logo Photo -->
          <div class="relative">
            <img src="/WhatsApp Image 2025-06-07 at 08.06.12_b276538e.jpg"
                 alt="ARJAY Beauty Lounge"
                 class="h-14 w-14 rounded-2xl object-cover shadow-lg border-2 border-primary-200 group-hover:border-primary-400 transition-all duration-300" />
            <div class="absolute inset-0 rounded-2xl bg-gradient-to-br from-primary-200/20 to-primary-400/20 group-hover:from-primary-300/30 group-hover:to-primary-500/30 transition-all duration-300"></div>
          </div>
          <!-- Text Logo -->
          <div class="hidden sm:block">
            <span class="text-2xl font-display font-bold gradient-text">ARJAY</span>
            <div class="text-xs text-primary-600 font-medium tracking-wider uppercase">Beauty Lounge</div>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:block">
        <div class="flex items-center space-x-2">
          <a href="#home" class="nav-link">Home</a>
          <a href="#services" class="nav-link">Services</a>
          <a href="#about" class="nav-link">About</a>
          <a href="#contact" class="nav-link">Contact</a>
          <div class="ml-4">
            <a href="#contact" class="btn-primary text-sm">
              <span>Book Appointment</span>
              <svg class="w-4 h-4 ml-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>

      <!-- Enhanced Mobile menu button with touch targets -->
      <div class="lg:hidden">
        <button
          type="button"
          class="mobile-menu-button btn-touch touch-feedback no-select rounded-xl text-neutral-700 hover:text-primary-600 hover:bg-primary-50 transition-all duration-200"
          aria-label="Toggle mobile menu"
          aria-expanded="false"
          aria-controls="mobile-navigation"
        >
          <div class="hamburger-container">
            <div class="hamburger-line"></div>
            <div class="hamburger-line"></div>
            <div class="hamburger-line"></div>
          </div>
        </button>
      </div>
    </div>

    <!-- Enhanced Mobile Navigation with Touch Targets -->
    <div
      id="mobile-navigation"
      class="mobile-menu mobile-nav-container hidden lg:hidden"
      aria-hidden="true"
    >
      <div class="mobile-nav-panel mobile-safe-area">
        <!-- Close button -->
        <div class="flex justify-end p-4 border-b border-gray-200">
          <button
            type="button"
            class="mobile-close-button btn-touch touch-feedback rounded-full text-gray-600 hover:text-gray-800 hover:bg-gray-100"
            aria-label="Close mobile menu"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>

        <!-- Navigation items with enhanced touch targets -->
        <nav class="py-4" role="navigation" aria-label="Mobile navigation">
          <a href="#home" class="mobile-nav-item nav-touch focus-visible">
            <span>Home</span>
          </a>
          <a href="#services" class="mobile-nav-item nav-touch focus-visible">
            <span>Services</span>
          </a>
          <a href="#about" class="mobile-nav-item nav-touch focus-visible">
            <span>About</span>
          </a>
          <a href="#contact" class="mobile-nav-item nav-touch focus-visible">
            <span>Contact</span>
          </a>

          <!-- Call-to-action with touch optimization -->
          <div class="px-6 pt-6 border-t border-gray-200">
            <a href="#contact" class="mobile-contact-action touch-feedback">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              <span>Book Appointment</span>
            </a>
          </div>
        </nav>
      </div>
    </div>
  </div>
</header>

<!-- Spacer to prevent content from hiding behind fixed header -->
<div class="h-20"></div>

<script>
  // Enhanced mobile menu with touch optimization and accessibility
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileCloseButton = document.querySelector('.mobile-close-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileNavPanel = document.querySelector('.mobile-nav-panel');
    const hamburgerContainer = document.querySelector('.hamburger-container');

    function openMobileMenu() {
      if (mobileMenu && mobileNavPanel && hamburgerContainer) {
        mobileMenu.classList.remove('hidden');
        mobileNavPanel.classList.add('open');
        hamburgerContainer.classList.add('hamburger-open');
        mobileMenuButton?.setAttribute('aria-expanded', 'true');
        mobileMenu.setAttribute('aria-hidden', 'false');

        // Focus management
        (mobileCloseButton as HTMLElement)?.focus();

        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      }
    }

    function closeMobileMenu() {
      if (mobileMenu && mobileNavPanel && hamburgerContainer) {
        mobileNavPanel.classList.remove('open');
        hamburgerContainer.classList.remove('hamburger-open');
        mobileMenuButton?.setAttribute('aria-expanded', 'false');
        mobileMenu.setAttribute('aria-hidden', 'true');

        // Restore body scroll
        document.body.style.overflow = '';

        // Hide menu after animation
        setTimeout(() => {
          mobileMenu.classList.add('hidden');
        }, 300);

        // Return focus to menu button
        (mobileMenuButton as HTMLElement)?.focus();
      }
    }

    // Menu button click handler
    if (mobileMenuButton) {
      mobileMenuButton.addEventListener('click', function() {
        const isHidden = mobileMenu?.classList.contains('hidden');
        if (isHidden) {
          openMobileMenu();
        } else {
          closeMobileMenu();
        }
      });
    }

    // Close button click handler
    if (mobileCloseButton) {
      mobileCloseButton.addEventListener('click', closeMobileMenu);
    }

    // Close menu when clicking outside
    if (mobileMenu) {
      mobileMenu.addEventListener('click', function(e) {
        if (e.target === mobileMenu) {
          closeMobileMenu();
        }
      });
    }

    // Close mobile menu when clicking on navigation links
    const mobileLinks = document.querySelectorAll('.mobile-nav-item');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        closeMobileMenu();
      });
    });

    // Keyboard navigation support
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !mobileMenu?.classList.contains('hidden')) {
        closeMobileMenu();
      }
    });

    // Header background opacity on scroll with performance optimization
    const header = document.querySelector('header');
    let ticking = false;

    function updateHeader() {
      if (window.scrollY > 50) {
        header?.classList.add('bg-white/95');
      } else {
        header?.classList.remove('bg-white/95');
      }
      ticking = false;
    }

    if (header) {
      window.addEventListener('scroll', () => {
        if (!ticking) {
          requestAnimationFrame(updateHeader);
          ticking = true;
        }
      });
    }

    // Touch feedback for mobile interactions
    const touchElements = document.querySelectorAll('.touch-feedback');
    touchElements.forEach(element => {
      element.addEventListener('touchstart', function() {
        (this as HTMLElement).style.transform = 'scale(0.95)';
      });

      element.addEventListener('touchend', function() {
        (this as HTMLElement).style.transform = 'scale(1)';
      });

      element.addEventListener('touchcancel', function() {
        (this as HTMLElement).style.transform = 'scale(1)';
      });
    });
  });
</script>
